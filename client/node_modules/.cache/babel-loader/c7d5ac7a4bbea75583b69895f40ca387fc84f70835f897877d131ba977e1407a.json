{"ast":null,"code":"var _jsxFileName = \"D:\\\\CODE\\\\tcgcontrol\\\\client\\\\src\\\\pages\\\\form.js\";\nimport React from \"react\";\nimport './form.css';\nimport { backURL, backPort } from './index.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Form() {\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    id: \"testform\",\n    className: \"Form\",\n    onSubmit: submitEvent,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Inserta algo makinon\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 9,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        id: \"algo\",\n        placeholder: \"pon algo hostia\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 10,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        children: \"Enviar\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 7,\n    columnNumber: 5\n  }, this);\n}\n_c = Form;\nconst submitEvent = event => {\n  event.preventDefault();\n  let algo = document.getElementById('algo').value;\n  let objetoAlgo = {\n    algo: algo\n  };\n  let objetoAlgoJson = JSON.stringify(objetoAlgo);\n  //fetch(\"http://localhost:3001/algo\", {\n  console.log(\"backURL: \" + backURL + \":\" + backPort + \"/algo\");\n  fetch(backURL + \":\" + backPort + \"/algo\", {\n    body: objetoAlgoJson,\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\"\n    }\n  }).then(res => {\n    //console.log(res.su);\n    if (!res.ok || res.status !== 200) {\n      // devuelve el ok de la peticion en sí y el status de la respuesta\n      throw new Error('Network response was not ok ' + res.statusText);\n    }\n    return res.json();\n  }).then(data => {\n    console.log('Success:', data);\n    let algos = data; // respuesta desde el backend\n    console.log(\"array: \", algos);\n  }).catch(error => {\n    console.error('Error:', error);\n  });\n};\n//PODEMOS LANZAR PETICIONES AL BACKEND SIN QUE SEA EN UN BOTÓN PARA CARGAR COSAS DE EN EL FRONTEND DE LA BDDD\n\nexport default Form;\nvar _c;\n$RefreshReg$(_c, \"Form\");","map":{"version":3,"names":["React","backURL","backPort","jsxDEV","_jsxDEV","Form","id","className","onSubmit","submitEvent","children","fileName","_jsxFileName","lineNumber","columnNumber","placeholder","_c","event","preventDefault","algo","document","getElementById","value","objetoAlgo","objetoAlgoJson","JSON","stringify","console","log","fetch","body","method","headers","then","res","ok","status","Error","statusText","json","data","algos","catch","error","$RefreshReg$"],"sources":["D:/CODE/tcgcontrol/client/src/pages/form.js"],"sourcesContent":["import React from \"react\";\r\nimport './form.css';\r\nimport { backURL, backPort } from './index.js';\r\n\r\nfunction Form() {\r\n  return (\r\n    <form id = \"testform\" className=\"Form\" onSubmit={submitEvent}>\r\n        <div>\r\n        <label>Inserta algo makinon</label>\r\n        <input id=\"algo\" placeholder=\"pon algo hostia\" />\r\n        </div>\r\n        <br />\r\n        <div>\r\n        <button>Enviar</button>\r\n        </div>\r\n    </form>\r\n  );\r\n}\r\n\r\nconst submitEvent = (event) => {\r\n  event.preventDefault();\r\n  let algo = document.getElementById('algo').value\r\n  let objetoAlgo = { algo: algo };\r\n  let objetoAlgoJson = JSON.stringify(objetoAlgo);\r\n    //fetch(\"http://localhost:3001/algo\", {\r\n    console.log(\"backURL: \" + backURL + \":\" + backPort + \"/algo\");\t\r\n    fetch(backURL + \":\" + backPort + \"/algo\", {\r\n        body: objetoAlgoJson,\r\n        method: \"POST\",\r\n        headers: {\r\n        \"Content-Type\": \"application/json\"\r\n        }\r\n    })\r\n    .then((res) => {\r\n        //console.log(res.su);\r\n        if (!res.ok || res.status !== 200) { // devuelve el ok de la peticion en sí y el status de la respuesta\r\n            throw new Error('Network response was not ok ' + res.statusText);\r\n        }\r\n        \r\n        return res.json();\r\n    \r\n    })\r\n    .then((data) => {\r\n        console.log('Success:', data);\r\n\r\n        let algos = data;  // respuesta desde el backend\r\n        console.log(\"array: \", algos);  \r\n    })\r\n    .catch((error) => {\r\n    console.error('Error:', error);\r\n    });\r\n};\r\n//PODEMOS LANZAR PETICIONES AL BACKEND SIN QUE SEA EN UN BOTÓN PARA CARGAR COSAS DE EN EL FRONTEND DE LA BDDD\r\n\r\nexport default Form;"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAO,YAAY;AACnB,SAASC,OAAO,EAAEC,QAAQ,QAAQ,YAAY;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE/C,SAASC,IAAIA,CAAA,EAAG;EACd,oBACED,OAAA;IAAME,EAAE,EAAG,UAAU;IAACC,SAAS,EAAC,MAAM;IAACC,QAAQ,EAAEC,WAAY;IAAAC,QAAA,gBACzDN,OAAA;MAAAM,QAAA,gBACAN,OAAA;QAAAM,QAAA,EAAO;MAAoB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO,CAAC,eACnCV,OAAA;QAAOE,EAAE,EAAC,MAAM;QAACS,WAAW,EAAC;MAAiB;QAAAJ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC5C,CAAC,eACNV,OAAA;MAAAO,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eACNV,OAAA;MAAAM,QAAA,eACAN,OAAA;QAAAM,QAAA,EAAQ;MAAM;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAClB,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACJ,CAAC;AAEX;AAACE,EAAA,GAbQX,IAAI;AAeb,MAAMI,WAAW,GAAIQ,KAAK,IAAK;EAC7BA,KAAK,CAACC,cAAc,CAAC,CAAC;EACtB,IAAIC,IAAI,GAAGC,QAAQ,CAACC,cAAc,CAAC,MAAM,CAAC,CAACC,KAAK;EAChD,IAAIC,UAAU,GAAG;IAAEJ,IAAI,EAAEA;EAAK,CAAC;EAC/B,IAAIK,cAAc,GAAGC,IAAI,CAACC,SAAS,CAACH,UAAU,CAAC;EAC7C;EACAI,OAAO,CAACC,GAAG,CAAC,WAAW,GAAG3B,OAAO,GAAG,GAAG,GAAGC,QAAQ,GAAG,OAAO,CAAC;EAC7D2B,KAAK,CAAC5B,OAAO,GAAG,GAAG,GAAGC,QAAQ,GAAG,OAAO,EAAE;IACtC4B,IAAI,EAAEN,cAAc;IACpBO,MAAM,EAAE,MAAM;IACdC,OAAO,EAAE;MACT,cAAc,EAAE;IAChB;EACJ,CAAC,CAAC,CACDC,IAAI,CAAEC,GAAG,IAAK;IACX;IACA,IAAI,CAACA,GAAG,CAACC,EAAE,IAAID,GAAG,CAACE,MAAM,KAAK,GAAG,EAAE;MAAE;MACjC,MAAM,IAAIC,KAAK,CAAC,8BAA8B,GAAGH,GAAG,CAACI,UAAU,CAAC;IACpE;IAEA,OAAOJ,GAAG,CAACK,IAAI,CAAC,CAAC;EAErB,CAAC,CAAC,CACDN,IAAI,CAAEO,IAAI,IAAK;IACZb,OAAO,CAACC,GAAG,CAAC,UAAU,EAAEY,IAAI,CAAC;IAE7B,IAAIC,KAAK,GAAGD,IAAI,CAAC,CAAE;IACnBb,OAAO,CAACC,GAAG,CAAC,SAAS,EAAEa,KAAK,CAAC;EACjC,CAAC,CAAC,CACDC,KAAK,CAAEC,KAAK,IAAK;IAClBhB,OAAO,CAACgB,KAAK,CAAC,QAAQ,EAAEA,KAAK,CAAC;EAC9B,CAAC,CAAC;AACN,CAAC;AACD;;AAEA,eAAetC,IAAI;AAAC,IAAAW,EAAA;AAAA4B,YAAA,CAAA5B,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}